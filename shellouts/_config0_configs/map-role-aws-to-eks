#!/bin/bash
#
# EKS IAM Identity Mapping Script
# This script creates an IAM identity mapping for an EKS cluster.
#
# Copyright 2025 Gary Leong <gary@config0.com>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

set -euo pipefail

# Default values and environment variables
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
EKS_ROLENAME=${EKS_ROLENAME:-}
EKS_CLUSTER=${EKS_CLUSTER:-}
DOCKER_EXEC=${DOCKER_EXEC:-weaveworks/eksctl:0.82.0}
AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}

# Function to check if a required variable is set
check_required_var() {
    local var_name="$1"
    local var_value="${!var_name}"
    
    if [ -z "$var_value" ]; then
        echo "Error: $var_name needs to be set in the environment" >&2
        exit 1
    fi
}

# Check required variables
check_required_var "AWS_ACCESS_KEY_ID"
check_required_var "AWS_SECRET_ACCESS_KEY"
check_required_var "EKS_ROLENAME"
check_required_var "EKS_CLUSTER"

# Get AWS Account ID
AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)
check_required_var "AWS_ACCOUNT_ID"

# Set up EKS role ARN and eksctl command
EKS_ROLEARN="arn:aws:iam::${AWS_ACCOUNT_ID}:role/${EKS_ROLENAME}"
EKSCTL_CMD="create iamidentitymapping --cluster $EKS_CLUSTER --arn ${EKS_ROLEARN} --group system:masters --username admin"
EKSCTL_CMD_HASH=$(echo "$EKSCTL_CMD" | base64 -w 0)

# Run Docker command
docker run --rm -i \
    -e AWS_ACCOUNT_ID \
    -e AWS_ACCESS_KEY_ID \
    -e AWS_SECRET_ACCESS_KEY \
    -e AWS_DEFAULT_REGION \
    "$DOCKER_EXEC" \
    $(echo "$EKSCTL_CMD_HASH" | base64 -d) || exit 1